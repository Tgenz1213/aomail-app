# LLM API KEYS
ANTHROPIC_API_KEY=""
GEMINI_API_KEY=""
MISTRAL_API_KEY=""
OPENAI_API_KEY=""
DEEPSEEK_API_KEY=""
GROQ_API_KEY=""

# ENCRYPTION KEYS
SOCIAL_API_REFRESH_TOKEN_KEY="<generate with python3 -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())'>"
EMAIL_ONE_LINE_SUMMARY_KEY="<generate with python3 -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())'>"
EMAIL_SHORT_SUMMARY_KEY="<generate with python3 -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())'>"
EMAIL_HTML_CONTENT_KEY="<generate with python3 -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())'>"

# DJANGO CREDENTIALS
DOMAIN="localhost" # or your DNS domain (e.g. "aomail.ai")
DJANGO_SECRET_KEY="<secret key for django - can be any string>"
DJANGO_DB_ENGINE="django.db.backends.postgresql"
DJANGO_DB_NAME="aomaildb"
DJANGO_DB_USER="user"
DJANGO_DB_PASSWORD="password"
DJANGO_DB_HOST="db"
DJANGO_DB_PORT="5432"

# EMAIL CREDENTIALS (for alerts)
EMAIL_NO_REPLY="<email to send alerts to developers>"
EMAIL_NO_REPLY_PASSWORD="<password of the email>"
EMAIL_ADMIN="<email to receive alerts from the application>"
        
# EMAIL PROVIDER WEBHOOKS
GOOGLE_TOPIC_NAME="" # optional - only if you want to use PubSub
GOOGLE_PROJECT_ID=""
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

MICROSOFT_CLIENT_ID=""
MICROSOFT_CLIENT_SECRET=""
MICROSOFT_TENANT_ID=""
MICROSOFT_CLIENT_STATE="<secret shared with Microsoft Graph API - can be any string>"

# STRIPE CREDENTIALS
STRIPE_PUBLISHABLE_KEY=""
STRIPE_SECRET_KEY=""
STRIPE_AOMAIL_WEBHOOK_SECRET=""